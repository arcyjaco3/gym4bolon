{"ast":null,"code":"var _jsxFileName = \"/Users/wiktor/Desktop/Projekt-React-main/src/components/PostList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/PostList.css';\nimport PostComment from './PostComment';\nimport PostComments from './PostComments';\nimport { fetchUsers } from '../data/api'; // Import your API file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [users, setUsers] = useState([]); // State to store user data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await fetchUsers();\n        setUsers(userData);\n      } catch (error) {\n        console.error('Error fetching users', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"personal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostComments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostComment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","PostComment","PostComments","fetchUsers","jsxDEV","_jsxDEV","PostList","_s","users","setUsers","fetchData","userData","error","console","className","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/wiktor/Desktop/Projekt-React-main/src/components/PostList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/PostList.css';\nimport PostComment from './PostComment';\nimport PostComments from './PostComments';\nimport PostGallery from './PostGallery';\nimport { fetchUsers } from '../data/api'; // Import your API file\n\ninterface PostListProps {}\n\nconst PostList: React.FC<PostListProps> = () => {\n  const [users, setUsers] = useState<any[]>([]); // State to store user data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await fetchUsers();\n        setUsers(userData);\n      } catch (error) {\n        console.error('Error fetching users', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  return (\n    <div className=\"post-list\">\n      {users.map((user) => (\n        <div className=\"single-post\" key={user.id}>\n          <div className=\"personal-header\">\n            <div className=\"post-info\">\n              <p>{user.name}</p>\n              {/* Additional user information can be displayed here */}\n            </div>\n          </div>\n          {/* Other post content goes here */}\n          <PostComments />\n          <PostComment />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAASC,UAAU,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI1C,MAAMC,QAAiC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAAC,CAAC;QACnCM,QAAQ,CAACE,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBP,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACdZ,OAAA;MAAKS,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BV,OAAA;QAAKS,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BV,OAAA;UAAKS,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBV,OAAA;YAAAU,QAAA,EAAIE,IAAI,CAACC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjB,OAAA,CAACH,YAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBjB,OAAA,CAACJ,WAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GATiBL,IAAI,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUpC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAjCID,QAAiC;AAAAkB,EAAA,GAAjClB,QAAiC;AAmCvC,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}